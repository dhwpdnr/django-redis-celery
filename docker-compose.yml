version: "3.8"

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "
      python manage.py wait_for_db &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - CELERY_BROKER_URL=redis://redis:6379/0  # 브로커 DB 0
      - CACHE_URL=redis://redis:6379/1  # 캐싱 DB 1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2  # 결과 DB 2

    depends_on:
      - db
      - redis
      - celery_worker

  db:
    image: postgres:13-alpine
    volumes:
      - dev-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

  redis:
    image: redis:6.0-alpine
    container_name: redis
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - ./app:/app
    command: >
      sh -c "
      celery -A config worker --loglevel=info
      "
    depends_on:
      - redis
      - db
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/2


  celery_beat:
    build:
      context: .
    container_name: celery_beat
    command: celery -A myproject beat --loglevel=info
    depends_on:
      - redis
      - app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

volumes:
  dev-postgres-data: